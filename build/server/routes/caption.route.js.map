{"version":3,"sources":["../../../src/server/routes/caption.route.js"],"names":["captionRouter","express","Router","get","req","res","CaptionModel","find","then","json","data","catch","status","err","post","body","topText","bottomText","new_caption","save","put","_id","params","id","findOneAndUpdate","$set","new","delete","findOneAndRemove","aggregate","$sample","size"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEO,IAAMA,wCAAgBC,kBAAQC,MAAR,EAAtB;;AAEPF,cAAcG,GAAd,CAAkB,WAAlB,EAA+B,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC9CC,gCACCC,IADD,GAECC,IAFD,CAEM,gBAAQ;AACVH,YAAII,IAAJ,CAASC,IAAT;AACH,KAJD,EAKCC,KALD,CAKO;AAAA,eAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBI,GAArB,CAAP;AAAA,KALP;AAMH,CAPD;;AASAb,cAAcc,IAAd,CAAmB,iBAAnB,EAAsC,UAASV,GAAT,EAAcC,GAAd,EAAmB;AAAA,oBACvBD,IAAIW,IADmB;AAAA,QAC9CC,OAD8C,aAC9CA,OAD8C;AAAA,QACrCC,UADqC,aACrCA,UADqC;;AAErD,QAAMC,cAAc,IAAIZ,2BAAJ,CAAiB;AACjCU,wBADiC;AAEjCC;AAFiC,KAAjB,CAApB;AAIAC,gBACCC,IADD,GAECX,IAFD,CAEM;AAAA,eAAQH,IAAII,IAAJ,CAASC,IAAT,CAAR;AAAA,KAFN,EAGCC,KAHD,CAGO;AAAA,eAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBI,GAArB,CAAP;AAAA,KAHP;AAIH,CAVD;;AAaAb,cAAcoB,GAAd,CAAkB,mBAAlB,EAAuC,UAAChB,GAAD,EAAKC,GAAL,EAAa;AAChD,QAAMgB,MAAMjB,IAAIkB,MAAJ,CAAWC,EAAvB;AADgD,qBAEhBnB,IAAIW,IAFY;AAAA,QAExCC,OAFwC,cAExCA,OAFwC;AAAA,QAE/BC,UAF+B,cAE/BA,UAF+B;;;AAIhDX,gCAAakB,gBAAb,CACI,EAACH,KAAKA,GAAN,EADJ,EAEI,EAACI,MAAM,EAACT,SAASA,OAAV,EAAmBC,YAAYA,UAA/B,EAAP,EAFJ,EAGI,EAACS,KAAK,IAAN,EAHJ,EAKClB,IALD,CAKO;AAAA,eAAQH,IAAII,IAAJ,CAASC,IAAT,CAAR;AAAA,KALP,EAMCC,KAND,CAMO;AAAA,eAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBI,GAArB,CAAP;AAAA,KANP;AAOH,CAXD;;AAcAb,cAAc2B,MAAd,CAAqB,qBAArB,EAA4C,UAACvB,GAAD,EAAKC,GAAL,EAAa;AACrD,QAAMkB,KAAKnB,IAAIkB,MAAJ,CAAWC,EAAtB;;AAEAjB,gCAAasB,gBAAb,CAA8B,EAACP,KAAKE,EAAN,EAA9B,EACCf,IADD,CACM;AAAA,eAAQH,IAAII,IAAJ,CAASC,IAAT,CAAR;AAAA,KADN,EAECC,KAFD,CAEO;AAAA,eAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBI,GAArB,CAAP;AAAA,KAFP;AAIH,CAPD;;AAUAb,cAAcG,GAAd,CAAkB,iBAAlB,EAAqC,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC9CC,gCAAauB,SAAb,CAAuB,CACnB,EAACC,SAAS;AACNC,kBAAM,CADA,CACE;AADF,SAAV,EADmB,CAAvB,EAKCvB,IALD,CAKM;AAAA,eAAQH,IAAII,IAAJ,CAASC,IAAT,CAAR;AAAA,KALN,EAMCC,KAND,CAMO;AAAA,eAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBI,GAArB,CAAP;AAAA,KANP;AAOH,CARD;;AAWA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"caption.route.js","sourcesContent":["import express from 'express';\nimport { CaptionModel } from '../schemas/caption.schema.js';\n\nexport const captionRouter = express.Router();\n\ncaptionRouter.get('/captions', function(req, res) {\n    CaptionModel\n    .find()\n    .then(data => {\n        res.json(data)\n    })\n    .catch(err => res.status(500).json(err));\n});\n\ncaptionRouter.post('/create-caption', function(req, res) {\n    const {topText, bottomText} = req.body;\n    const new_caption = new CaptionModel({\n        topText,\n        bottomText\n    });\n    new_caption\n    .save()\n    .then(data => res.json(data))\n    .catch(err => res.status(500).json(err))\n});\n\n\ncaptionRouter.put('/edit-caption/:id', (req,res) => {\n    const _id = req.params.id\n    const { topText, bottomText } = req.body;\n\n    CaptionModel.findOneAndUpdate(\n        {_id: _id}, \n        {$set: {topText: topText, bottomText: bottomText}},\n        {new: true}\n    )\n    .then (data => res.json(data))\n    .catch(err => res.status(500).json(err))\n})\n\n\ncaptionRouter.delete('/delete-caption/:id', (req,res) => {\n    const id = req.params.id;\n\n    CaptionModel.findOneAndRemove({_id: id})\n    .then(data => res.json(data))\n    .catch(err => res.status(500).json(err))\n\n})\n\n\ncaptionRouter.get('/random-caption', (req,res) => {\n    CaptionModel.aggregate([\n        {$sample: { \n            size: 1 // grabs how many documents we will get \n        }}\n    ])\n    .then(data => res.json(data))\n    .catch(err => res.status(500).json(err))\n})\n\n\n//Another way to get random document(caption) from db\n\n// captionRouter.get('/random-caption', (req,res) => {\n//     CaptionModel.count().exec(function(err, count){\n//         let random = Math.floor(Math.random() * count);\n\n//         CaptionModel.findOne().skip(random).exec()\n//         .then(data => res.json(data))\n//         .catch(err => res.status(500).json(err))\n//     })\n// })\n"]}