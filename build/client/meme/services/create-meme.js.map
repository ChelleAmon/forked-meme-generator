{"version":3,"sources":["../../../../src/client/meme/services/create-meme.js"],"names":["updateMemeCanvas","memeFile","document","getElementById","topTextInput","botTextInput","canvas","button","maxHeight","maxWidth","imgValue","image","imageDataURL","addEventListener","URL","createObjectURL","files","Image","src","getContext","alert","once","ctx","beginPath","wrapText","text","x","y","lineHeight","words","split","line","entries","index","w","testLine","metrics","measureText","testWidth","width","fillText","strokeText","height","yOffSet","h","console","log","drawImage","font","fillStyle","strokeStyle","textBaseline","textAlign","topText","value","botText","saveButton","window","navigator","msSaveBlob","msToBlob","a","createElement","body","appendChild","href","toDataURL","imageName","prompt","download","click","removeChild"],"mappings":"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","file":"create-meme.js","sourcesContent":["import saveCaption from \"../../caption/services/save-caption.js\"\n\n    let memeFile = document.getElementById('uploadMeme')\n    let topTextInput = document.getElementById('topText')\n    let botTextInput = document.getElementById('botText')\n    const canvas = document.getElementById('Canvas')\n    const button = document.getElementById('btn')\n\n\n    const maxHeight = 400;\n    const maxWidth = 800;\n    let imgValue;\n\n    let image;\n    let imageDataURL;\n\n\n    topTextInput.addEventListener(\"change\", () => {\n        updateMemeCanvas();\n      });\n      \n    botTextInput.addEventListener(\"change\", () => {\n        updateMemeCanvas();\n      });\n\n    memeFile.addEventListener('change', () => {\n        imageDataURL = URL.createObjectURL(memeFile.files[0])\n        image = new Image();\n        image.src = imageDataURL;\n\n        image.addEventListener(\"load\", () => {\n            if(canvas.getContext('2d')) {\n                updateMemeCanvas()\n            } \n            else {\n                alert('Your browser does not support this image format');\n            }\n\n        }, { once: true });\n    })\n\n    export function updateMemeCanvas() {\n\n        if(!image) return;\n        \n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n\n        // function to wrap text on captions\n        const wrapText = (ctx, text, x, y, maxWidth, lineHeight) => {\n            const words = text.split(' ');\n            let line = '';\n            for (const [index, w] of words.entries()) {\n                const testLine = line + w + ' ';\n                const metrics = ctx.measureText(testLine);\n                const testWidth = metrics.width;\n                if (testWidth > maxWidth && index > 0) {\n                    ctx.fillText(line, x, y);\n                    ctx.strokeText(line, x, y);\n                    line = w + ' ';\n                    y += lineHeight;\n                } else {\n                    line = testLine;\n                }\n            }\n            ctx.fillText(line, x, y);\n            ctx.strokeText(line, x, y);\n        }\n\n        // establish image size\n        const width = image.width;\n        const height = image.height;\n        const yOffSet = maxHeight / 7;\n        let w;\n        let h;\n\n        // Resize image within max bounds\n        if (width > maxWidth) {\n            imgValue = width / maxWidth;\n            w = width / imgValue;\n            h = height / imgValue;\n        }\n        else if (height > maxHeight) {\n            imgValue = height / maxHeight;\n            w = width / imgValue;\n            h = height / imgValue;\n        }\n        else {\n            w = width;\n            h = height;\n        }\n\n\n        // load the canvas background\n        canvas.width = w;\n        canvas.height = h;\n\n        console.log(canvas.width);\n        ctx.drawImage(image, 0, 0, w, h);\n\n        const lineHeight = 35;\n        const x = w / 2;\n        const y = 80;\n\n        // styling the meme text\n        ctx.font = 'Bold 40px Sans-serif';\n        ctx.fillStyle = 'white';\n        ctx.strokeStyle = 'black';\n\n        // adding the top meme text\n        ctx.textBaseline = 'Top';\n        ctx.textAlign = 'center';\n        // ctx.fillText(topText.value, w / 2, yOffSet);\n        // ctx.strokeText(topText.value, w / 2, yOffSet);\n        wrapText(ctx, topText.value, x, y, maxWidth, lineHeight);\n\n        // adding the bottom text\n        ctx.textBaseline = 'Bottom';\n        // ctx.fillText(botText.value, w / 2, h - yOffSet);\n        // ctx.strokeText(botText.value, w / 2, h - yOffSet);\n        wrapText(ctx, botText.value, x, h - yOffSet, maxWidth, lineHeight);\n\n    }\n\n    const saveButton = document.getElementById('saving');\n\n\n    saveButton.addEventListener('click', () => {\n        if (topTextInput.value == '' && botTextInput.value == '') {\n            alert('Both text fields cannot be empty, please fill out at least one form.');\n        }\n        else {\n            saveCaption(topTextInput.value, botTextInput.value)\n            alert('You have saved ' + topTextInput.value + ' & ' + botTextInput.value + ' to the database');\n\n    }\n})\n\n// download meme\nbutton.addEventListener('click', function() {\n    // for Internet Explorer\n    if(window.navigator.msSaveBlob) {\n        window.navigator.msSaveBlob(canvas.msToBlob(), \"canvas-image.png\")\n    }\n    else {\n            const a =  document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.href = canvas.toDataURL();\n\n            const imageName = prompt(\"Enter Image Name\", \"canvas-image\");\n            if(imageName != null) {\n                a.download = `${imageName}.png`;\n            }\n            else {\n                a.download = \"canvas-image.png\";\n            }\n\n            a.click();\n            document.body.removeChild(); \n    }\n})\n\n"]}